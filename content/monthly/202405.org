#+TITLE: 202405
#+DATE: 2024-05-02T22:18:59+0800
#+LASTMOD: 2024-05-06T09:35:39+0800
#+DRAFT: true
* 重大事件
* 观点/教程
- [[https://arne.me/blog/thoughts-on-zig][Thoughts on Zig]] :: 又一篇 Zig 初学者的使用体验文档，如果你也在犹豫要不要学 Zig，这是个不错的经验参考。
- [[https://www.reddit.com/r/Zig/comments/1ckstjv/im_sold_on_zigs_simplicity/][I'm sold on Zig's simplicity : r/Zig]] :: 一个具有资深经验开发者，在这里描述了自己选择业余项目语言的经历：
  - Rust 越来越复杂，有种发展成 C++ 的趋势
  - C++ 新版本的特性（比如 module）LSP 支持的不够好，而且历史包袱严重
  - C 缺少元编程，并且没有命名空间

  最后从 Andrew 的一个播客了解到 Zig，经过自己尝试，发现了 Zig 没有辜负他的期望，尽管是第一次写 Zig，但基本上没有什么难度，
  每次遇到问题，仔细想几分钟就差不多有答案了。下面是他罗列的 Zig 的一些优势：
  - 十分简洁，import 返回的是一个 struct，和其他变量一样使用
  - 与 C 无缝交换，
  - 具有 Result 效果的错误处理
  - 唯一缺失的就是『接口』，但这一点并不是很关键，就像在 C里也没有，但是 C 可以做任何事
* 项目/工具
* [[https://github.com/ziglang/zig/pulls?page=1&q=+is%3Aclosed+is%3Apr+closed%3A2024-05-01..2024-06-01][Zig 语言更新]]
