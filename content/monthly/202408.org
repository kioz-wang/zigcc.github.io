#+TITLE: 202410
#+DATE: 2024-10-26T00:17:35+0800
#+LASTMOD: 2024-10-26T13:05:32+0800
* 重大事件
* 观点/教程
** [[https://mrcat.au/blog/zig_is_cool/][Zig is everything I want C to be]]
对 Zig 的特色进行了简单扼要的介绍，主要有：
1. UB 行为检测。
   - Zig 的指针不能是 null，需要用 optional 类型
   - C 里面的 =void*= 等价于 Zig 里面的 =?*anyopaque= 。 =void= 在 C 里面有两个意思，第一是『什么都没有』，第二是『类型不确定』，但 =void= 在 Zig 中只有第一个含义，因此用了 =anyopaque= 来表示类型擦除的指针（type-erased pointers）。
   - 数组越界检查
   - 整数溢出
2. Bitfield， =packed struct= 可以方便的用来进行协议解析，比如对于 32 位的 RISC-V 的指令，可以这么定义解析：
   #+begin_src zig
const IType = packed struct {
    opcode: u7,
    rd: u5,
    funct3: u3,
    rs1: u5,
    imm: i12, // For sign-extension
};

const encoded_instr: u32 = 0xFFF34293;
const instr: IType = @bitCast(encoded_instr);
   #+end_src
3. comptime，Zig 进行元编程的基础，类型是一等成员
4. 与 C 无缝交互， =zig cc= 是交叉编译的首选

* 项目/工具
* [[https://github.com/ziglang/zig/pulls?page=1&q=+is%3Aclosed+is%3Apr+closed%3A2024-10-01..2024-11-01][Zig 语言更新]]
